server.port=80

# file access
# spring.mvc.static-path-pattern=/**
# spring.resources.static-locations=file:./uploads/,file:./js/,file:./css/
spring.resources.static-locations=classpath:/static,file:public/

# suppress postgresql createClob exception
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# print sql request
#spring.jpa.show-sql=true
# generate database on start-up
spring.jpa.properties.javax.persistence.schema-generation.database.action=drop-and-create

# postgresql settings
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/quetinkee
spring.datasource.username=postgres
spring.datasource.password=postgres

#h2 settings
# spring.datasource.driver-class-name=org.h2.Driver
# spring.datasource.url=jdbc:h2:mem:localhost
# spring.datasource.username=admin
# spring.datasource.password=

# Session timeout
server.servlet.session.timeout=168h
server.servlet.session.cookie.max-age=168h

# uploads
spring.servlet.multipart.max-file-size=8MB
spring.servlet.multipart.max-request-size=16MB

quetinkee.upload.root=./public/
quetinkee.upload.path=uploads/imgs
quetinkee.upload.img-size=600
